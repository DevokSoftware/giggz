buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:${openApiVersion}"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.openapi.generator" version "${openApiVersion}"
}

apply plugin: 'org.openapi.generator'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

compileJava.dependsOn tasks.openApiGenerate

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springJpaVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation project(':giggz-service')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.2.0'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapiStarterWebmvcUiVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$projectDir/src/main/resources/openapi.yaml")
    outputDir.set("$buildDir/generated/openapi")
    apiPackage.set("com.devok.giggz.openapi.api")
    invokerPackage.set("com.devok.giggz.openapi.invoker")
    validateSpec.set(true)
    modelPackage.set("com.devok.giggz.openapi.model")
//    generateModelTests.set(false)
//    generateApiTests.set(false)
    configOptions = [
            useSpringBoot3 : "true",
            openApiNullable: "false",
            interfaceOnly  : "true",
            skipDefaultInterface:"true",
    ]
    importMappings = [
        Pageable: 'org.springframework.data.domain.Pageable',
        Page: 'org.springframework.data.domain.Page'
    ]
}

sourceSets {
    main {
        java {
            srcDir file("${project.buildDir.path}/generated/openapi/src/main/java")
        }
    }
}

compileJava.dependsOn("openApiGenerate")